workflow:
    rules:
    - if: $CI_COMMIT_BRANCH != "khaldoun" && $CI_PIPELINE_SOURCE != "merge-request-event" 
      when: never
    - when: always
stages:
    - clean
    - build
    - test


# lint_job:
#     stage: clean
#     tags: 
#         - windows
#         - local 
#     cache:
#         key: "$CI_COMMIT_REF_NAME"
#         paths:
#             - "node_modules"
#         policy: pull-push
#     before_script:
#         - npm install
#     script:
#         - echo "formatting code"
#         - npm run format
#         - echo "linting code"
#         - npm run lint

variables:
    MIN_THRESHOLD: 30


run_unit_tests:
    stage: test
    cache:
        key: "$CI_COMMIT_REF_NAME"
        paths:
            - "node_modules"
        policy: pull-push
    coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

    tags:
        - local
        - windows
    before_script:
        - npm install
    script:
        - $output = npm run test:report | Select-String -Pattern 'All files[^|]*\|[^|]*\s+([\d\.]+)'
        - $splitValues = $output -split '\|'
        - $extractedValue = $splitValues[1].Trim()
        - echo $extractedValue
        - echo coverage=$extractedValue >> coverage.env
    artifacts:
        when: always
        paths:
            - ./junit.xml
            - ./coverage.env
        reports:
            junit: ./junit.xml
            dotenv: coverage.env

read_coverage:
    script:
        - $output=cat coverage.env
        - $curr_coverage= $output -split '\=' 
        - $curr_coverage=$curr_coverage[1].Trim()
        - echo $curr_coverage
    needs:
        - job: run_unit_tests
          artifacts: true
